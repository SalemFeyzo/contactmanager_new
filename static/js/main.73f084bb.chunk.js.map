{"version":3,"sources":["components/contacts/Contact.js","actions/contactActions.js","actions/types.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","reducers/contactReducer.js","reducers/index.js","store.js","App.js","registerServiceWorker.js","index.js"],"names":["Contact","state","showContactInfo","onDeleteClick","id","props","deleteContact","this","contact","name","email","phone","className","onClick","setState","style","cursor","float","color","bind","to","marginRight","Component","connect","dispatch","a","axios","delete","type","payload","Contacts","getContacts","contacts","Fragment","map","key","get","res","data","TextInputGroup","label","value","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","addContact","history","push","target","post","EditContact","updContact","match","params","updateContact","nextProps","nextState","getContact","put","Header","branding","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","App","exact","path","component","About","NotFound","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.73f084bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteContact } from '../../actions/contactActions';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  onDeleteClick = (id) => {\n    this.props.deleteContact(id);\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <div className=\"card card-body mb-3\">\n        <h4>\n          {name}{' '}\n          <i\n            onClick={() =>\n              this.setState({\n                showContactInfo: !this.state.showContactInfo,\n              })\n            }\n            className=\"fas fa-sort-down\"\n            style={{ cursor: 'pointer' }}\n          />\n          <i\n            className=\"fas fa-trash\"\n            style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n            onClick={this.onDeleteClick.bind(this, id)}\n          />\n          <Link to={`contact/edit/${id}`}>\n            <i\n              className=\"fas fa-edit\"\n              style={{\n                cursor: 'pointer',\n                float: 'right',\n                color: 'black',\n                marginRight: '1rem',\n              }}\n            />\n          </Link>\n        </h4>\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\">Email: {email}</li>\n            <li className=\"list-group-item\">Phone: {phone}</li>\n          </ul>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteContact })(Contact);\n","import {\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  ADD_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT\n} from './types';\nimport axios from 'axios';\n\nexport const getContacts = () => async dispatch => {\n  const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n  dispatch({\n    type: GET_CONTACTS,\n    payload: res.data\n  });\n};\n\nexport const getContact = id => async dispatch => {\n  const res = await axios.get(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n  dispatch({\n    type: GET_CONTACT,\n    payload: res.data\n  });\n};\n\nexport const deleteContact = id => async dispatch => {\n  try {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  } catch (e) {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }\n};\n\nexport const addContact = contact => async dispatch => {\n  const res = await axios.post(\n    'https://jsonplaceholder.typicode.com/users',\n    contact\n  );\n  dispatch({\n    type: ADD_CONTACT,\n    payload: res.data\n  });\n};\n\nexport const updateContact = contact => async dispatch => {\n  const res = await axios.put(\n    `https://jsonplaceholder.typicode.com/users/${contact.id}`,\n    contact\n  );\n  dispatch({\n    type: UPDATE_CONTACT,\n    payload: res.data\n  });\n};\n","export const GET_CONTACTS = 'GET_CONTACTS';\nexport const DELETE_CONTACT = 'DELETE_CONTACTS';\nexport const ADD_CONTACT = 'ADD_CONTACT';\nexport const GET_CONTACT = 'GET_CONTACT';\nexport const UPDATE_CONTACT = 'UPDATE_CONTACT';\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getContacts } from '../../actions/contactActions';\n\nclass Contacts extends Component {\n  componentDidMount() {\n    this.props.getContacts();\n  }\n\n  render() {\n    const { contacts } = this.props;\n    return (\n      <React.Fragment>\n        <h1 className=\"display-4 text-info mb-2\">Contact List</h1>\n        {contacts.map((contact) => (\n          <Contact key={contact.id} contact={contact} />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  getContacts: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contact.contacts,\n});\n\nexport default connect(mapStateToProps, { getContacts })(Contacts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames('form-control form-control-lg', {\n          'is-invalid': error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addContact } from '../../actions/contactActions';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone,\n    };\n\n    this.props.addContact(newContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header bg-info text-white \">Add Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Contact\"\n              className=\"btn btn-outline-primary btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddContact.propTypes = {\n  addContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addContact })(AddContact);\n","import React, { Component } from 'react';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getContact, updateContact } from '../../actions/contactActions';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {},\n  };\n\n  componentWillReceiveProps(nextProps, nextState) {\n    const { name, email, phone } = nextProps.contact;\n    this.setState({\n      name,\n      email,\n      phone,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getContact(id);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({ errors: { name: 'Name is required' } });\n      return;\n    }\n\n    if (email === '') {\n      this.setState({ errors: { email: 'Email is required' } });\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required' } });\n      return;\n    }\n\n    const { id } = this.props.match.params;\n\n    const updContact = {\n      id,\n      name,\n      email,\n      phone,\n    };\n\n    this.props.updateContact(updContact);\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {},\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <div className=\"card mb-3\">\n        <div className=\"card-header bg-info text-white\">Edit Contact</div>\n        <div className=\"card-body\">\n          <form onSubmit={this.onSubmit}>\n            <TextInputGroup\n              label=\"Name\"\n              name=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={this.onChange}\n              error={errors.name}\n            />\n            <TextInputGroup\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={this.onChange}\n              error={errors.email}\n            />\n            <TextInputGroup\n              label=\"Phone\"\n              name=\"phone\"\n              placeholder=\"Enter Phone\"\n              value={phone}\n              onChange={this.onChange}\n              error={errors.phone}\n            />\n            <input\n              type=\"submit\"\n              value=\"Update Contact\"\n              className=\"btn btn-outline-primary btn-block\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nEditContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n  getContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contact: state.contact.contact,\n});\n\nexport default connect(mapStateToProps, { getContact, updateContact })(\n  EditContact\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          {branding}\n        </Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus-circle\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-info-circle\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My App',\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import {\n  GET_CONTACTS,\n  DELETE_CONTACT,\n  ADD_CONTACT,\n  GET_CONTACT,\n  UPDATE_CONTACT\n} from '../actions/types';\n\nconst initialState = {\n  contacts: [],\n  contact: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload\n      };\n    case GET_CONTACT:\n      return {\n        ...state,\n        contact: action.payload\n      };\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        contacts: state.contacts.map(\n          contact =>\n            contact.id === action.payload.id\n              ? (contact = action.payload)\n              : contact\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport contactReducer from './contactReducer';\n\nexport default combineReducers({\n  contact: contactReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}